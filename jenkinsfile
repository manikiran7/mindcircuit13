pipeline
{
          agent any
          tools {
                    maven 'Maven3'
          }
          environment {
                    SONARQUBE_ENV = 'mysonarqube'
                    DOCKER_IMAGE = 'manikiran7/firstrepo'
                    DOCKER_CREDENTIAL = 'dockerhub-creds'          }
          stages {
          stage('Checkout') {
               steps {
                    git branch: 'main', url: 'https://github.com/manikiran7/mindcircuit13.git'
               }
          }
          stage('Code Qulaity Check') {
                         steps {
                         withSonarQubeEnv("${SONARQUBE_ENV}") {
                                        sh 'mvn clean verify sonar:sonar'
                         }
                    }
          }
          stage('Maven Builds') {
               steps {
                         sh  'mvn clean package -Dskipstests'
                    }
               }
          
          
          
          stage('Docker Build & Push image') {
    steps {
            script {
                def tag = "${BUILD_NUMBER}"

                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIAL}", usernameVariable: 'DOCKERUSER', passwordVariable: 'DOCKERPASS')]) {
                    sh """
                    # Remove all old images with same name except the current tag (cleanup before build)
                    docker images | grep ${DOCKER_IMAGE} | awk '{print \$3}' | xargs -r docker rmi -f || true

                    # Build and push the new image
                    docker build -t ${DOCKER_IMAGE}:${tag} .
                    echo \$DOCKERPASS | docker login -u \$DOCKERUSER --password-stdin
                    docker push ${DOCKER_IMAGE}:${tag}

                    # Optional: Prune dangling images
                    docker image prune -f || true
                    """
                }
            }
        }
    }
}



 
          post {
     always {
          cleanWs()
          }
     }
}
